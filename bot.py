from config import bot  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–π –≤ config.py –±–æ—Ç
from telebot import types
import logic
hideBoard = types.ReplyKeyboardRemove()


@bot.message_handler(commands=['start'])
def hand_start(message):
    bot.send_message(message.chat.id,"""–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫! –Ø –±–æ—Ç —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –º–∞–≥–∞–∑–∏–Ω–∞ "–ü—Ä–æ–¥–∞–µ–º –≤—Å—ë –Ω–∞ —Å–≤–µ—Ç–µ". –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–º–∞–Ω–¥ –≤–≤–µ–¥–∏—Ç–µ: /help""")

@bot.message_handler(commands=['help'])
def hand_helpcom(message):
    bot.send_message(message.chat.id, """–¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: \n
    /QuesAns - –æ—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã \n
    /probTech - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—É –µ—Å–ª–∏ –≤—ã –∑–∞–º–µ—Ç–∏–ª–∏ —á—Ç–æ —Å–∞–π—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç \n
    /probProd - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –ø—Ä–æ–¥–∞–≤—Ü—É –Ω–∞—Å—á–µ—Ç –ø—Ä–æ–¥—É–∫—Ç–∞ –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–µ–ª–∏/—Ö–æ—Ç–∏—Ç–µ –∏–ª–∏ —É–∂–µ –∫—É–ø–∏–ª–∏""")


@bot.message_handler(commands=['QuesAns'])
def handle_helpcom(message):
    markup = types.InlineKeyboardMarkup(row_width=1)

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ callback_data
    button1 = types.InlineKeyboardButton(
        "–ö–∞–∫ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑?",
        callback_data="question_order"
    )
    button2 = types.InlineKeyboardButton(
        "–ö–∞–∫ —É–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞?",
        callback_data="question_status"
    )
    button3 = types.InlineKeyboardButton(
        "–ö–∞–∫ –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑?",
        callback_data="question_cancel"
    )
    button4 = types.InlineKeyboardButton(
            "–ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ —Ç–æ–≤–∞—Ä –ø—Ä–∏—à–µ–ª –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–º?",
        callback_data="question_broke"
    )
    button5 = types.InlineKeyboardButton(
        "–ö–∞–∫ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –≤–∞—à–µ–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π?",
        callback_data="question_support"
    )
    button6 = types.InlineKeyboardButton(
        "–ö–∞–∫ —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å—Ç–∞–≤–∫–µ?",
        callback_data="question_delivery"
    )

    markup.add(button1, button2, button3, button4, button5, button6)
    bot.send_message(message.chat.id, "–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã:", reply_markup=markup)



@bot.message_handler(commands=['probTech'])
def hand_tecpr(message):
    msg = bot.send_message(message.chat.id,
                            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –∫–∞–∫ –º–æ–∂–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–µ–µ. –ù–∞—à–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ —É–∂–µ —É–≤–µ–¥–æ–º–ª–µ–Ω—ã –∏ —Å–∫–æ—Ä–æ –µ—ë –∏—Å–ø—Ä–∞–≤—è—Ç.",
                            reply_markup=hideBoard)
    bot.register_next_step_handler(msg, process_tech_request)


def process_tech_request(message):
    user_id = message.from_user.id
    username = message.from_user.username
    request_text = message.text

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ –±–∞–∑—É
    logic.save_tech_request(user_id, username, request_text)
    bot.send_message(message.chat.id, "‚úÖ –í–∞—à –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!")

@bot.message_handler(commands=['MyReq'])
def handle_myreq(message):
    user_id = message.from_user.id
    requests = logic.get_user_requests(user_id)

    if not requests:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤.")
        return

    response = "üìù –í–∞—à–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø—Ä–æ—Å—ã:\n\n"
    for req in requests:
        response += f"üìÖ {req['created_at']}\nüîß –°—Ç–∞—Ç—É—Å: {req['status']}\n‚úâÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ: {req['request_text']}\n\n"

    bot.send_message(message.chat.id, response)

if __name__ == "__main__":
    bot.polling(none_stop=True)